// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	cockroach2 "github.com/aqaurius6666/go-utils/database/cockroach"
	"github.com/aqaurius6666/mailservice/src/internal/api"
	"github.com/aqaurius6666/mailservice/src/internal/db"
	"github.com/aqaurius6666/mailservice/src/internal/db/cockroach"
	"github.com/aqaurius6666/mailservice/src/internal/mail"
	"github.com/aqaurius6666/mailservice/src/internal/model"
	"github.com/aqaurius6666/mailservice/src/services/fcm"
	"github.com/sirupsen/logrus"
)

// Injectors from server.wire.go:

func InitMainServer(ctx context.Context, logger2 *logrus.Logger, opts ServerOptions) (*Server, error) {
	mailUsername := opts.Username
	mailPassword := opts.Password
	smtpHost := opts.Host
	smtpPort := opts.Port
	smtpSender := opts.Sender
	serviceV2 := mail.NewServiceV2(mailUsername, mailPassword, smtpHost, smtpPort, smtpSender)
	dbDsn := opts.DBDsn
	gormDB, err := db.ConnectGorm(dbDsn)
	if err != nil {
		return nil, err
	}
	dbInterfaces := cockroach.InterfacesProvider()
	cdbRepository := cockroach2.CDBRepository{
		Db:         gormDB,
		Logger:     logger2,
		Context:    ctx,
		Interfaces: dbInterfaces,
	}
	serverCDBRepo := &cockroach.ServerCDBRepo{
		CDBRepository: cdbRepository,
	}
	fb_PRIVATE_KEY := opts.FirebaseKey
	service, err := fcm.NewService(logger2, fb_PRIVATE_KEY)
	if err != nil {
		return nil, err
	}
	serverModel := &model.ServerModel{
		Ctx:    ctx,
		Logger: logger2,
		Repo:   serverCDBRepo,
		Fcm:    service,
	}
	apiServer := &api.ApiServer{
		MailService: serviceV2,
		Logger:      logger2,
		Model:       serverModel,
	}
	server := &Server{
		ApiServer: apiServer,
		Repo:      serverCDBRepo,
	}
	return server, nil
}

// server.wire.go:

type Server struct {
	ApiServer *api.ApiServer
	Repo      db.ServerRepo
}

type ServerOptions struct {
	Username    mail.MailUsername
	Password    mail.MailPassword
	Host        mail.SMTPHost
	Port        mail.SMTPPort
	Sender      mail.SMTPSender
	DBDsn       db.DBDsn
	FirebaseKey fcm.FB_PRIVATE_KEY
}
